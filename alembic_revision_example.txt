# Alembic migration hints for refresh_tokens + Google OAuth (no table for OAuth here)

# 1) Ensure Alembic can import your models (env.py should import your models package).
# 2) After adding RefreshToken model to your models module, generate migration:
#    alembic revision --autogenerate -m "add refresh_tokens table"
# 3) Review migration, then apply:
#    alembic upgrade head
#
# Example autogenerated operations you should expect:
# op.create_table('refresh_tokens',
#     sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
#     sa.Column('user_id', sa.Integer(), nullable=False),
#     sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
#     sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
#     sa.Column('revoked', sa.Boolean(), nullable=False),
#     sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
#     sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
#     sa.PrimaryKeyConstraint('id')
# )
# op.create_index('ix_refresh_user_active', 'refresh_tokens', ['user_id', 'revoked'], unique=False)
#
# Google OAuth requires SessionMiddleware in your FastAPI app:
# from starlette.middleware.sessions import SessionMiddleware
# app.add_middleware(SessionMiddleware, secret_key=SECRET_KEY)  # same SECRET_KEY is fine in dev
#
# And these env vars:
# GOOGLE_CLIENT_ID=...
# GOOGLE_CLIENT_SECRET=...
# BACKEND_URL=https://api.tu-domaine.fr
# FRONTEND_URL=https://app.tu-domaine.fr
#
# In prod behind HTTPS, remember cookies need SameSite=None; Secure (ENV=prod, PROD_DOMAIN set).